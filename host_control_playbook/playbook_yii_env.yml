- name: Check hosts state
  hosts: all
  vars:
    ansible_python_interpreter: /usr/bin/python3.9
  tasks:

    # CHECK-VAR

    - name: Get container environment YII_ENV value
      shell: docker exec -it backend-api env | grep YII_ENV
      register: command_output2
      tags:
        - check-var
    - debug:
        msg: "{{ command_output2.stdout }}"
      tags:
        - check-var

    # CHANGE-VAR

    - name: Replace YII_ENV value in .env file
      command: sed -i 's/YII_ENV=prod/YII_ENV=dev/' /opt/app/.env
      tags:
        - change-var

     # RECOMPOSE

    - name: Run down.sh script
      command: bash /opt/app/down.sh
      args:
        chdir: /opt/app/
      register: down_script_result
      tags:
        - recompose

    - name: Check if down.sh script executed successfully
      fail:
        msg: "down.sh script failed"
      when: down_script_result.rc != 0
      tags:
        - recompose

    - name: Run up.sh script
      command: bash /opt/app/up.sh
      args:
        chdir: /opt/app/
      register: up_script_result
      tags:
        - recompose

    - name: Check if up.sh script executed successfully
      fail:
        msg: "up.sh script failed"
      when: up_script_result.rc != 0
      tags:
        - recompose
